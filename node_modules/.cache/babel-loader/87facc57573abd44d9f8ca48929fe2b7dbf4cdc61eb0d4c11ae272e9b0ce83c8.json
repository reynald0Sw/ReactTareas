{"ast":null,"code":"var _jsxFileName = \"/Users/reynald0_sw/Documents/desarrollo-full-stack/Frontend/ProyectosFreecodecamp/react-tareas/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Task from './Task';\nimport '../Styles/TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [task, setTask] = useState([]);\n  const addTask = task => {\n    console.log(task);\n    if (task.text.trim()) {\n      task.text = task.text.trim();\n      const updatedTask = [task, ...task];\n      setTask(updatedTask);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list-container\",\n      children: task.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        text: task.text,\n        complete: task.complete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskList, \"UGeVFzauI+pG9NcZUnchbFHQCUs=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskForm","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","task","setTask","addTask","console","log","text","trim","updatedTask","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","complete","_c","$RefreshReg$"],"sources":["/Users/reynald0_sw/Documents/desarrollo-full-stack/Frontend/ProyectosFreecodecamp/react-tareas/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Task from './Task';\nimport '../Styles/TaskList.css'\n\nfunction TaskList (){\n\n  const [ task, setTask ] = useState([]);\n\n  const addTask = task => {\n    console.log(task);\n    if (task.text.trim()) {\n      task.text = task.text.trim();\n      const updatedTask = [task, ...task];\n      setTask(updatedTask);      \n    }\n  }\n\n\n\n  return(\n    <>\n      <TaskForm onSubmit={addTask} />\n      <div className='task-list-container'>\n        {\n          task.map((task)=>\n            <Task \n              key={task.id}\n              id={task.id}\n              text={task.text}\n              complete={task.complete}\n            />\n          )\n        }\n\n      </div>\n    </>\n  );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,OAAO,GAAGF,IAAI,IAAI;IACtBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;MACpBN,IAAI,CAACK,IAAI,GAAGL,IAAI,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC;MAC5B,MAAMC,WAAW,GAAG,CAACP,IAAI,EAAE,GAAGA,IAAI,CAAC;MACnCC,OAAO,CAACM,WAAW,CAAC;IACtB;EACF,CAAC;EAID,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACH,QAAQ;MAACiB,QAAQ,EAAEP;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BlB,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAN,QAAA,EAEhCR,IAAI,CAACe,GAAG,CAAEf,IAAI,iBACZL,OAAA,CAACF,IAAI;QAEHuB,EAAE,EAAEhB,IAAI,CAACgB,EAAG;QACZX,IAAI,EAAEL,IAAI,CAACK,IAAK;QAChBY,QAAQ,EAAEjB,IAAI,CAACiB;MAAS,GAHnBjB,IAAI,CAACgB,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGA,CAAC;EAAA,eACN,CAAC;AAEP;AAACd,EAAA,CAjCQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}